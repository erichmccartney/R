library("readxl")
setwd("~/GitHub/R/DataSets")
d <- read_excel("OnlineRetailCampaign.xlsx", sheet="Data")
str(d)
hist(d$visits)                                     # Not normally distributed
df <- read_excel("OnlineRetailCampaign.xlsx", sheet="Data")
str(df)
dim(df)
str(df)
View(df)                                           # Data looks clean
library(dplyr)
df = read.table("http://www.stat.columbia.edu/~gelman/arm/examples/police/frisk_with_noise.dat", skip=6, header=TRUE)
dim(df)
str(df)
library("readxl")
setwd("~/GitHub/R/DataSets")
df <- read_excel("OnlineRetailCampaign.xlsx", sheet="Data")
str(df)
dim(df)
str(df)
View(df)                                           # Data looks clean
#' Recode factor variables
library(dplyr)
df <- filter(d, visit == "1" & conversion == "1")
dim(df)
str(df)
View(df)
df <- filter(d, visit == "1" | conversion == "1")
dim(df)
hist(df$spend)                                     # Not normally distributed
hist(log(d$spend))                                # Not much better
lines(density(log(d$spend)), col="red")           # Density function is a flat line!
df = read.table("http://www.stat.columbia.edu/~gelman/arm/examples/police/frisk_with_noise.dat", skip=6, header=TRUE)
dim(df)
str(df)
View(df)
df$mens = recode_factor(df$mens, "1"="men", "2"="women")
library("readxl")
setwd("~/GitHub/R/DataSets")
df <- read_excel("OnlineRetailCampaign.xlsx", sheet="Data")
dim(d)
str(d)
View(d)
#ID Customers and subset data
library(dplyr)
df <- filter(d, visit == "1" | conversion == "1")
dim(df)
str(df)
View(df)
df$mens = recode_factor(df$mens, "1"="men", "2"="women")
df$mens = relevel(df$mens, "men")
sex <- mens
names(df)[name(df) == "mens"] <- "sex"
names(df)[names(df) == "mens"] <- "sex"
library(dplyr)
df <- filter(d, visit == "1" | conversion == "1")
dim(df)
str(df)
View(df)
#' Recode factor variable of mens and womens to new variable sex
df$mens = recode_factor(df$mens, "1"="men", "0"="women")
df$mens = relevel(df$mens, "men")
names(df)[names(df) == "mens"] <- "sex"
# Recode factor variable newcustomer
df$newcustomer = recode_factor(df$newcustomer, "1"="New", "0"="Existing")
df$newcustomer = relevel(df$newcustomer, "New")
names(df)[names(df) == "newcustomer"] <- "customer"
View(df)
str(df)
#drop unecessary columns
col <- c("recency", "historysegment", "sex", "customer", "channel", "campaign")
d[col] <- lapply(d[col], factor)
names(df)[names(df) == "mens"] <- "sex"
names(df)[names(df) == "newcustomer"] <- "customer"
#drop unecessary columns
col <- c("recency", "historysegment", "sex", "customer", "channel", "campaign")
d[col] <- lapply(d[col], factor)
df[col] <- lapply(d[col], factor)
#drop unecessary columns
col <- c("recency", "historysegment", "sex", "customer", "channel", "campaign")
df[col] <- lapply(d[col], factor)
df[col] <- lapply(df[col], factor)
str(df)
library("readxl")
setwd("~/GitHub/R/DataSets")
df <- read_excel("OnlineRetailCampaign.xlsx", sheet="Data")
dim(d)
str(d)
View(d)
#ID Customers and subset data
library(dplyr)
df <- filter(d, visit == "1" | conversion == "1")
dim(df)
str(df)
View(df)
#' Recode factor variable of mens and womens to new variable sex
df$mens = recode_factor(df$mens, "1"="men", "0"="women")
df$mens = relevel(df$mens, "men")
names(df)[names(df) == "mens"] <- "sex"
# Recode factor variable newcustomer
df$newcustomer = recode_factor(df$newcustomer, "1"="New", "0"="Existing")
df$newcustomer = relevel(df$newcustomer, "New")
names(df)[names(df) == "newcustomer"] <- "customer"
#drop unecessary columns
col <- c("recency", "historysegment", "sex", "customer", "channel", "campaign")
df1[col] <- lapply(df[col], factor)
df[col] <- lapply(df[col], factor)
str(df)
#drop unecessary columns
colnames(sf)
#drop unecessary columns
colnames(df)
df1 <- df[, -c(1, 3, 6, 10:11)]
col <- c("recency", "historysegment", "sex", "customer", "channel", "campaign")
df1[col] <- lapply(df1[col], factor)
col <- c("historysegment", "sex", "customer", "channel", "campaign")
df1[col] <- lapply(df1[col], factor)
str(df1)
df1 <- df[, -c(1, 3, 5:6, 10:11)]
col <- c("historysegment", "sex", "customer", "channel", "campaign")
df1[col] <- lapply(df1[col], factor)
str(df1)
hist(df$spend)                                     # Not normally distributed
hist(log(d$spend))                                # Not much better
lines(density(log(d$spend)), col="red")           # Density function is a flat line!
df1 <- df[, -c(3, 5:6, 10:11)]
col <- c("historysegment", "sex", "customer", "channel", "campaign")
df1[col] <- lapply(df1[col], factor)
str(df1)
cor(d[1:7])                                        # Correlation between numeric variables
df1 <- df[, -c(1, 5:6, 10:11)]
col <- c("historysegment", "sex", "customer", "channel", "campaign")
df1[col] <- lapply(df1[col], factor)
str(df1)
cor(d[3:7])                                        # Correlation between numeric variables
cor(d[2:7])                                        # Correlation between numeric variables
cor(d[1:6])                                        # Correlation between numeric variables
library(PerformanceAnalytics)
chart.Correlation(temp)
chart.Correlation(df1)
library(PerformanceAnalytics)
chart.Correlation(df1)
cor(df1[1:6])                                        # Correlation between numeric variables
cor(df1[2:7])                                        # Correlation between numeric variables
str(df1)
cor(df1[2:7])                                        # Correlation between numeric variables
library(corrplot)
dtemp <- cor(cbind(df1[, 1], df1[, 2:7]))
colnames(df1)
cor(df1[2:7])                                        # Correlation between numeric variables
df1$history = as.numeric(df1$history)
str(df1)
df1$spend = as.numeric(df1$spend)
cor(df1[2:7])                                        # Correlation between numeric variables
colnames(df1)
dtemp <- cor(cbind(df1[, 1], df1[, 2:7]))
library(ggplot2)
ggplot(df1, aes(x=history, y=log(spend))) +
geom_point(color= "steelblue") +
geom_smooth(method="loess", color="red")         # Fit loess (non-linear) plot
table(d$spend)                                    # 80% of observations are zero!
table(df1$spend)                                    # 80% of observations are zero!
colnames(df1)
qpoisson <- glm(visits ~ historysegment + history + sex + customer +
channel + campaign + spend, family=quasipoisson (link=log), data=d)
qpoisson <- glm(spend ~ historysegment + history + sex + customer +
channel + campaign + spend, family=quasipoisson (link=log), data=d)
poisson <- glm(spend ~ historysegment + history + sex + customer +
channel + campaign + spend, family=poisson (link=log), data=df1)
summary(poisson)
library(AER)
dispersiontest(poisson)
poisson <- glm(spend ~ historysegment + history + sex + customer +
channel + campaign, family=poisson (link=log), data=df1)
summary(poisson)
dispersiontest(poisson)
qpoisson <- glm(spend ~ historysegment + history + sex + customer +
channel + campaign, family=quasipoisson (link=log), data=df1)
library(MASS)
nbinom <- glm.nb(visits ~ spend ~ historysegment + history + sex + customer +
channel + campaign, data=df1)
nbinom <- glm.nb(spend ~ historysegment + history + sex + customer +
channel + campaign, data=df1)
library(stargazer)
stargazer(poisson, qpoisson, nbinom, type="text", single.row=TRUE)
library(pscl)
hpoisson <- hurdle(spend ~ historysegment + history + sex + customer +
channel + campaign, data=df1, link="logit", dist="poisson")
summary(hpoisson)
hnegbin <- hurdle(spend ~ historysegment + history + sex + customer +
channel + campaign, data=df1, link="logit", dist="negbin")
summary(hnegbin)
zip <- zeroinfl(spend ~ historysegment + history + sex + customer +
channel + campaign, data=df1, link="logit", dist="poisson")
summary(zip)
zinb <- zeroinfl(spend ~ historysegment + history + sex + customer +
channel + campaign, data=df1, link="logit", dist="negbin")
summary(zinb)
stargazer(hpoisson, hnegbin, zip, zinb, type="text", single.row=TRUE)
library(pscl)
hpoisson <- hurdle(spend ~ historysegment + history + sex + customer +
channel + campaign, data=df1, link="logit", dist="poisson")
hnegbin <- hurdle(spend ~ historysegment + history + sex + customer +
channel + campaign, data=df1, link="logit", dist="negbin")
zip <- zeroinfl(spend ~ historysegment + history + sex + customer +
channel + campaign, data=df1, link="logit", dist="poisson")
zinb <- zeroinfl(spend ~ historysegment + history + sex + customer +
channel + campaign, data=df1, link="logit", dist="negbin")
df1$spend <- as.integer(df1$spend)
hpoisson <- hurdle(spend ~ historysegment + history + sex + customer +
channel + campaign, data=df1, link="logit", dist="poisson")
summary(hpoisson)
hnegbin <- hurdle(spend ~ historysegment + history + sex + customer +
channel + campaign, data=df1, link="logit", dist="negbin")
summary(hnegbin)
zip <- zeroinfl(spend ~ historysegment + history + sex + customer +
channel + campaign, data=df1, link="logit", dist="poisson")
summary(zip)
zinb <- zeroinfl(spend ~ historysegment + history + sex + customer +
channel + campaign, data=df1, link="logit", dist="negbin")
summary(zinb)
stargazer(hpoisson, hnegbin, zip, zinb, type="text", single.row=TRUE)
df1$history <- as.integer(df1$history)
cor(df1[2:7])                                        # Correlation between numeric variables
poisson <- glm(log(spend) ~ historysegment + history + sex + customer +
channel + campaign, family=poisson (link=log), data=df1)
poisson <- glm(spend ~ historysegment + history + sex + customer +
channel + campaign, family=poisson (link=log), data=df1)
poisson <- glm(log(spend) ~ historysegment + log(history) + sex + customer +
channel + campaign, family=poisson (link=log), data=df1)
poisson <- glm(spend ~ historysegment + log(history) + sex + customer +
channel + campaign, family=poisson (link=log), data=df1)
summary(poisson)
poisson <- glm(log(spend) ~ historysegment + log(history) + sex + customer +
channel + campaign, family=poisson (link=log), data=df1)
qpoisson <- glm(log(spend) ~ historysegment + history + sex + customer +
channel + campaign, family=quasipoisson (link=log), data=df1)
stargazer(poisson, qpoisson, nbinom, type="text", single.row=TRUE)
stargazer(hpoisson, hnegbin, zip, zinb, type="text", single.row=TRUE)
hpoisson <- hurdle(log(spend) ~ historysegment + history + sex + customer +
channel + campaign, data=df1, link="logit", dist="poisson")
hpoisson <- hurdle(spend ~ historysegment + history + sex + customer +
channel + campaign, data=df1, link="logit", dist="poisson")summary(hpoisson)
hpoisson <- hurdle(spend ~ historysegment + history + sex + customer +
channel + campaign, data=df1, link="logit", dist="poisson")
stargazer(hpoisson, hnegbin, zip, zinb, type="text", single.row=TRUE)
stargazer(poisson, nbinom, hpoisson, type="text", single.row=TRUE)
table(df1$customer)
table(df1$men)
table(df1$sex)
