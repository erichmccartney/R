setwd("~/GitHub/R/DataSets")
d <- read.csv("Cryptosporidium.csv")
str(d)
colSums(is.na(d))                                 # Check for missing data
d <- d[complete.cases(d),]
length(unique(d$ID))
library(lattice)
histogram(~Weight, data=d)                        # Misleading histogram: data autocorrelated
densityplot(~Weight, data=d)
densityplot(~Weight | Gender, data=d)
densityplot(~Weight | Gender*Infected, data=d)
bwplot(Weight ~ Gender, data=d)
bwplot(Weight ~ Gender | Infected, data=d)
xyplot(Weight ~ Age | Infected, data=d)
xyplot(Weight ~ Age | ID, data=d[1:43,])
ols <- lm(Weight ~ Infected*Gender + Infected*Age, data=d)
summary(ols)
fe <- lm(Weight ~ Infected*Gender + Infected*Age + as.factor(ID), data=d)
summary(fe)
library(lme4)
re <- lmer(Weight ~ Infected*Gender + Infected*Age + (1 | ID), data=d, REML=FALSE)
summary(re)
ranef(re)
coef(re)
library(stargazer)
options(max.print=10000)
stargazer(ols, fe, re, type="text", single.row=TRUE)
library(plm)
pooled <- plm(Weight ~ Infected*Gender + Infected*Age, data=d, index="ID", model="pooling")
fixed  <- plm(Weight ~ Infected*Gender + Infected*Age, data=d, index="ID", model="within")
random <- plm(Weight ~ Infected*Gender + Infected*Age, data=d, index="ID", model="random")
stargazer(pooled, fixed, random, type="text", single.row=TRUE)
setwd("~/GitHub/R/DataSets")
library(readxl)
setwd("~/GitHub/R/DataSets")
library(readxl)
Crime <- read_excel("CrimeNC.xlsx")
View(Crime)
str(Crime)
colnames(Crime)
names(Crime)[3]  <- "crimerate"
names(Crime)[4]  <- "arrest"
names(Crime)[5]  <- "conviction"
names(Crime)[6]  <- "prison"
names(Crime)[7]  <- "sentence"
names(Crime)[8]  <- "police"
names(Crime)[9]  <- "popdensity"
names(Crime)[10] <- "taxrevenue"
names(Crime)[12] <- "urban"
names(Crime)[13] <- "minority"
names(Crime)[names(Crime)=="pctymle"] <- "youngmale"
Crime$wage <- (Crime$wcon + Crime$wtuc + Crime$wtrd + Crime$wfir +
Crime$wser + Crime$wmfg + Crime$wfed + Crime$wsta + Crime$wloc)/9
Crime$wcon <- NULL
Crime$wtuc <- NULL
Crime$wtrd <- NULL
Crime$wfir <- NULL
Crime$wser <- NULL
Crime$wmfg <- NULL
Crime$wfed <- NULL
Crime$wsta <- NULL
Crime$wloc <- NULL
str(Crime)
d <- Crime
remove(Crime)
str(d)
d$urban  <- factor(d$urban)
d$region <- factor(d$region)
d$county <- factor(d$county)
d$year   <- factor(d$year)
str(d)
which(! complete.cases(d))
d <- d[complete.cases(d), ]
nrow(d)
unique(d$year)
unique(d$county)
length(unique(d$county))
levels(d$urban)
hist(d$crimerate)
hist(log(d$crimerate))                                # We won't use log transformation
hist(d$wage)
summary(cbind(d[, 3:10], d[, 13:16]))
round(cor(cbind(d[, 3:10], d[, 13:16])), 3)
#' install.packages("corrplot")
library(corrplot)
m <- cor(cbind(d[, 3:10], d[, 13:16]))
corrplot(m, method="circle")
cor(d$crimerate, d$police)                            # Positive correlation
cor(d$crimerate, d$arrest)                            # Negative correlation
plot(d$crimerate ~ d$police)
abline(lm(d$crimerate ~ d$police), col="red")
plot(d$crimerate ~ d$arrest)
abline(lm(d$crimerate ~ d$arrest), col="red")
ols1 <- lm(crimerate ~ police + arrest, data=d)
summary(ols1)                                         # OLS ignoring county & year
plot(ols1)                                            # Police presence increases crime?
hist(ols1$res)
qqnorm(ols1$res)
qqline(ols1$res, col="red")
shapiro.test(ols1$res)                                # Residuals not MV normal
plot(ols1$res ~ ols1$fit)
bartlett.test(list(ols1$res, ols1$fit))
norm <- rnorm(630)
bartlett.test(list(ols1$res, norm))                   # Residuals heteroskedastic
library("car")
vif(ols1)                                             # No multicollinearity in data
ols2 <- lm(crimerate ~ police + arrest + county, data=d)
options(max.print=500)
summary(ols2)                                         # OLS with county as factor
ols3 <- lm(crimerate ~ police + arrest + county + year, data=d)
summary(ols3)                                         # OLS with county and year as factor
# Police presence still increases crime
library(stargazer)
stargazer(ols1, ols2, ols3, type="text", single.row=TRUE)
#' install.packages("plm")
library(plm)
d <- pdata.frame(d, index=c("county", "year"))
pooled <- plm(crimerate ~ police + arrest, data=d, model="pooling")
summary(pooled)                                       # OLS model
plmtest(pooled)                                       # LM test of pooled model
plmtest(pooled, effect="twoways", type="bp")          # Data shows panel effect
fixed1 <-  plm(crimerate ~ police + arrest, data=d, model="within")
summary(fixed1)                                       # Fixed effects model
fixef(fixed1)
summary(fixef(fixed1))
fixed2 <-  plm(crimerate ~ police + arrest, data=d, model="within", effect="twoways")
summary(fixed2)                                       # Two-way fixed effects model
summary(fixef(fixed2))
random <- plm(crimerate ~ police + arrest, data=d, model="random")
summary(random)                                       # Random effects model
ranef(random)
summary(ranef(random))
stargazer(pooled, fixed1, fixed2, random, type="text", single.row=TRUE)
pFtest(fixed1, pooled)                                 # F test for nested models: FE is better
phtest(fixed1, random)                                 # Hausman test: FE is better
d1 <- subset(d, d$region %in% c("central", "west"))
str(d1)
table(d1$region)
d1 <- droplevels(d1)
plot(crimerate ~ region, data=d1)
t.test(crimerate ~ region, data=d1)
mod1 <- lm(crimerate ~ police + arrest + region, data=d1)
summary(mod1)
setwd("~/GitHub/R/DataSets")
library(nlme)
data(MathAchieve)
View(MathAchieve)
View(MathAchieve)
data(MathAchSchool)
View(MathAchSchool)
write.csv(MathAchieve, file="MathAchieve.csv")
write.csv(MathAchSchool, file="MathAchSchool.csv")
d <- merge(MathAchieve, MathAchSchool, by="School")
View(d)
cor(d$MEANSES.x, d$MEANSES.y)
d$MEANSES.y <- NULL
d$MEANSES <- d$MEANSES.x
d$MEANSES.x <- NULL
View(d)
write.csv(d, file="MathAch.csv")
rm(MathAchieve)
rm(MathAchSchool)
str(d)
length(unique(d$School))
class(d$School)
hist(d$MathAch)
library(lme4)
#' Interclass correlation (ICC) can be computed using merTools package
#' install.packages("merTools")
library(merTools)
ICC(outcome="MathAch", group="School", data=d)
#' Interclass correlation (ICC) can be computed using merTools package
install.packages("merTools")
library(merTools)
ICC(outcome="MathAch", group="School", data=d)
#' Random intercept model: How do math achievement vary across schools?
#' Note: If REML (Restricted Maximum Likelihood) is set to FALSE, we use standard MLE
m1 <- lmer(MathAch ~ 1 + (1 | School), data=d, REML=FALSE)
summary(m1)
confint(m1)
AIC(m1)
fixef(m1)                                       # Magnitude of fixed effect
ranef(m1)                                       # Magnitude of random effect
coef(m1)                                        # Magnitude of total effect
#' Random intercept model with fixed Level 1 predictors
m2 <- lmer(MathAch ~ SES + Sex + Minority + (1 | School), data=d, REML=FALSE)
summary(m2)
confint(m2)
anova(m1, m2)                                   # Chi-sq test for comparing nested models
#' Random intercept model with fixed Level 1 and Level 2 predictors
m3 <- lmer(MathAch ~ SES + Sex + Minority + Sector + Size + (1 | School), data=d, REML=FALSE)
summary(m3)
ranef(m3)
anova(m2, m3)
library(stargazer)
stargazer(m1, m2, m3, type="text")
#' Model with two Level 2 random intercepts
m4 <- lmer(MathAch ~ 1 + (1 | School) + (1 | Size), data=d, REML=FALSE)
summary(m4)
anova(m1, m4)                                   # Adding size adds no further explanation to schools
coef(m4)
#' Model with two Level 2 random intercepts
m5 <- lmer(MathAch ~ 1 + (1 | School) + (1 | Sector), data=d, REML=FALSE)
summary(m5)
anova(m1, m5)                                   # m1 and m5 are not nested models
coef(m5)
#' Random intercept model with nested Level 2 predictor (in 3-level models)
#' Examines random intercept varying among sector and school within sector
m6 <- lmer(MathAch ~ 1 + (1 | Sector/School), data=d, REML=FALSE)
summary(m6)
anova(m1, m6)
coef(m6)
#' What are we trying to do in the following models?
m7 <- lmer(MathAch ~ 1 + (1 | Sector/Size), data=d, REML=FALSE)
summary(m7)
coef(m7)
m8 <- lmer(MathAch ~ 1 + (1 | Sector/School) + (1 | Size), data=d)
summary(m8)                                     # Why are the random effects of size zero?
ranef(m8)
coef(m4)
m9 <- lmer(MathAch ~ SES + Sex + Minority + (1 | School) + (1 | Sector), data=d, REML=FALSE)
summary(m9)
coef(m9)
anova(m2, m9)
#' Correlated random slope and random intercept model
#' Note: Random slope to the left of |, random intercept to the right of |
m10 <- lmer(MathAch ~ SES + Sex + Minority + (1 + SES | School), data=d, REML=FALSE)
summary(m10)
coef(m10)
anova(m2, m10)
m9 <- lmer(MathAch ~ SES + Sex + Minority + (1 | School) + (1 | Sector), data=d, REML=FALSE)
summary(m9)
